{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\KUMARMUK\\\\Desktop\\\\Anime App\\\\Anime App\\\\Views\\\\Anime.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { LogBox } from \"react-native-web/dist/index\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { DataProvider } from \"react-native-web/dist/index\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport DrawerLayoutAndroid from \"react-native-web/dist/exports/DrawerLayoutAndroid\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport { faHistory, faHome, faSearch, faBookmark, faEllipsisV, faMoon, faLanguage, faFastForward, faBars, faBackward, faArrowLeft, faTimesCircle } from '@fortawesome/free-solid-svg-icons/index';\nimport { faDiscord, faGithub } from \"../node_modules/@fortawesome/free-brands-svg-icons\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { Switch, TextInput } from 'react-native-gesture-handler';\nimport { color } from 'react-native-reanimated';\nimport { parse } from '@fortawesome/fontawesome-svg-core';\nexport default function Anime(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      AnimePageLink = _useState2[0],\n      SetAnimePageLink = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Description = _useState4[0],\n      SetDescription = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      Title_Image = _useState6[0],\n      SetImage = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      Title = _useState8[0],\n      SetTitle = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      Type = _useState10[0],\n      SetType = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      Genre = _useState12[0],\n      SetGenre = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      Released = _useState14[0],\n      SetReleased = _useState14[1];\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      Status = _useState16[0],\n      SetStatus = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      OtherName = _useState18[0],\n      SetOtherName = _useState18[1];\n\n  var _useState19 = useState(\"0/1000\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      Watched = _useState20[0],\n      Setwatched = _useState20[1];\n\n  var _useState21 = useState(null),\n      _useState22 = _slicedToArray(_useState21, 2),\n      Bookmarked = _useState22[0],\n      SetBookmarked = _useState22[1];\n\n  var _useState23 = useState(null),\n      _useState24 = _slicedToArray(_useState23, 2),\n      JustChecking = _useState24[0],\n      SetJustChecking = _useState24[1];\n\n  useEffect(function () {\n    var RemoveB = function RemoveB() {\n      var value, Parsed, i, Final_Save;\n      return _regeneratorRuntime.async(function RemoveB$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('BookMarks'));\n\n            case 3:\n              value = _context2.sent;\n              Parsed = JSON.parse(value);\n              console.log(JSON.parse(value));\n\n              for (i = 0; i < Parsed[0].Name.length; i++) {\n                if (Parsed[0].Name[i].Title === Title) {\n                  console.log(\"Exterminate >: \");\n                  Parsed[0].Name.splice(i, 1);\n                }\n              }\n\n              Final_Save = function Final_Save() {\n                return _regeneratorRuntime.async(function Final_Save$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.prev = 0;\n                        _context.next = 3;\n                        return _regeneratorRuntime.awrap(AsyncStorage.setItem('BookMarks', JSON.stringify(Parsed)));\n\n                      case 3:\n                        console.log('Exterminated');\n                        _context.next = 9;\n                        break;\n\n                      case 6:\n                        _context.prev = 6;\n                        _context.t0 = _context[\"catch\"](0);\n                        alert(_context.t0);\n\n                      case 9:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, null, null, [[0, 6]], Promise);\n              };\n\n              Final_Save();\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](0);\n              _context2.t0;\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 11]], Promise);\n    };\n\n    var AddB = function AddB() {\n      var value, _Parsed, Final_Save, SavingArray, _Final_Save;\n\n      return _regeneratorRuntime.async(function AddB$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('BookMarks'));\n\n            case 3:\n              value = _context5.sent;\n              _Parsed = JSON.parse(value);\n\n              if (_Parsed !== null) {\n                console.log('adding only sike');\n\n                _Parsed[0].Name.push({\n                  \"Title\": Title,\n                  \"Released\": Released,\n                  \"Link\": AnimePageLink,\n                  \"Image\": Title_Image\n                });\n\n                Final_Save = function Final_Save() {\n                  return _regeneratorRuntime.async(function Final_Save$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          _context3.prev = 0;\n                          _context3.next = 3;\n                          return _regeneratorRuntime.awrap(AsyncStorage.setItem('BookMarks', JSON.stringify(_Parsed)));\n\n                        case 3:\n                          console.log('done with sike');\n                          _context3.next = 9;\n                          break;\n\n                        case 6:\n                          _context3.prev = 6;\n                          _context3.t0 = _context3[\"catch\"](0);\n                          alert(_context3.t0);\n\n                        case 9:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, null, null, [[0, 6]], Promise);\n                };\n\n                Final_Save();\n              } else {\n                console.log('adding only');\n                SavingArray = [{\n                  \"Name\": []\n                }];\n                SavingArray[0].Name.push({\n                  \"Title\": Title,\n                  \"Released\": Released,\n                  \"Link\": AnimePageLink,\n                  \"Image\": Title_Image\n                });\n                console.log(SavingArray);\n\n                _Final_Save = function _Final_Save() {\n                  return _regeneratorRuntime.async(function _Final_Save$(_context4) {\n                    while (1) {\n                      switch (_context4.prev = _context4.next) {\n                        case 0:\n                          _context4.prev = 0;\n                          _context4.next = 3;\n                          return _regeneratorRuntime.awrap(AsyncStorage.setItem('BookMarks', JSON.stringify(SavingArray)));\n\n                        case 3:\n                          console.log('done');\n                          _context4.next = 9;\n                          break;\n\n                        case 6:\n                          _context4.prev = 6;\n                          _context4.t0 = _context4[\"catch\"](0);\n                          alert(_context4.t0);\n\n                        case 9:\n                        case \"end\":\n                          return _context4.stop();\n                      }\n                    }\n                  }, null, null, [[0, 6]], Promise);\n                };\n\n                _Final_Save();\n              }\n\n              _context5.next = 11;\n              break;\n\n            case 8:\n              _context5.prev = 8;\n              _context5.t0 = _context5[\"catch\"](0);\n              _context5.t0;\n\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    };\n\n    if (Bookmarked === true && JustChecking === false) {\n      AddB();\n    } else if (Bookmarked === false && JustChecking === false) {\n      RemoveB();\n    }\n  }, [Bookmarked]);\n  useEffect(function () {\n    if (Bookmarked === null && Title !== null) {\n      var load = function load() {\n        var value, parsedVAlue, i;\n        return _regeneratorRuntime.async(function load$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n                _context6.next = 3;\n                return _regeneratorRuntime.awrap(AsyncStorage.getItem('BookMarks'));\n\n              case 3:\n                value = _context6.sent;\n\n                if (JSON.parse(value) !== null) {\n                  console.log(\"some\");\n                  parsedVAlue = JSON.parse(value);\n                  console.log(\"sso close\");\n                  console.log(parsedVAlue);\n                  console.log(parsedVAlue[0].Name.length);\n                  console.log('Title is' + Title);\n\n                  for (i = 0; i < parsedVAlue[0].Name.length; i++) {\n                    if (parsedVAlue[0].Name[i].Title === Title) {\n                      SetBookmarked(true);\n                    }\n                  }\n\n                  SetJustChecking(false);\n                } else {\n                  console.log(\"none\");\n                  SetBookmarked(false);\n                  SetJustChecking(false);\n                }\n\n                _context6.next = 10;\n                break;\n\n              case 7:\n                _context6.prev = 7;\n                _context6.t0 = _context6[\"catch\"](0);\n                alert(_context6.t0);\n\n              case 10:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, null, null, [[0, 7]], Promise);\n      };\n\n      load();\n    }\n  }, [Title]);\n\n  var _useState25 = useState(true),\n      _useState26 = _slicedToArray(_useState25, 2),\n      isAnimeLoading = _useState26[0],\n      SetAnimeLoading = _useState26[1];\n\n  var _useState27 = useState(true),\n      _useState28 = _slicedToArray(_useState27, 2),\n      isEpisodesLoading = _useState28[0],\n      SetEpisodesLoading = _useState28[1];\n\n  var _useState29 = useState(null),\n      _useState30 = _slicedToArray(_useState29, 2),\n      RecentData = _useState30[0],\n      SetRecentData = _useState30[1];\n\n  var loadRecent = function loadRecent() {\n    var value, parsedValue;\n    return _regeneratorRuntime.async(function loadRecent$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.prev = 0;\n            _context7.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('Recent'));\n\n          case 3:\n            value = _context7.sent;\n            parsedValue = JSON.parse(value);\n            SetRecentData(parsedValue);\n            _context7.next = 11;\n            break;\n\n          case 8:\n            _context7.prev = 8;\n            _context7.t0 = _context7[\"catch\"](0);\n            alert(\"nooo\");\n\n          case 11:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  useEffect(function () {\n    if (RecentData === null) {\n      loadRecent();\n    } else {}\n  }, [RecentData]);\n\n  var _useState31 = useState(null),\n      _useState32 = _slicedToArray(_useState31, 2),\n      AnimeLink = _useState32[0],\n      SetLink = _useState32[1];\n\n  var save = function save() {\n    return _regeneratorRuntime.async(function save$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.prev = 0;\n            _context8.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"Anime\", AnimeLink));\n\n          case 3:\n            navigation.push('Watch');\n            _context8.next = 9;\n            break;\n\n          case 6:\n            _context8.prev = 6;\n            _context8.t0 = _context8[\"catch\"](0);\n            alert(_context8.t0);\n\n          case 9:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  useEffect(function () {\n    if (AnimeLink !== null) {\n      console.log(\"UseEffect\" + AnimeLink);\n      save();\n    }\n\n    SetLink(null);\n  }, [AnimeLink]);\n  var RecentItems = [{\n    \"Name\": []\n  }];\n\n  function addToRecent() {\n    console.log(\"add To recent\");\n\n    var LoadRI = function LoadRI() {\n      var value, _Parsed2, i;\n\n      return _regeneratorRuntime.async(function LoadRI$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.prev = 0;\n              _context9.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('Recent'));\n\n            case 3:\n              value = _context9.sent;\n\n              if (value === null) {\n                saveRI();\n              } else {\n                _Parsed2 = JSON.parse(value);\n                console.log(\"Before\");\n\n                for (i = 0; i < _Parsed2[0].Name.length; i++) {\n                  if (RecentItems[0].Name[0].Link === _Parsed2[0].Name[i].Link) {\n                    console.log('same dont copy');\n                  } else {\n                    RecentItems[0].Name.push(_Parsed2[0].Name[i]);\n                  }\n                }\n\n                console.log(\"LoadRi\");\n                saveRI();\n              }\n\n              _context9.next = 10;\n              break;\n\n            case 7:\n              _context9.prev = 7;\n              _context9.t0 = _context9[\"catch\"](0);\n              alert(_context9.t0);\n\n            case 10:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    var saveRI = function saveRI() {\n      return _regeneratorRuntime.async(function saveRI$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.prev = 0;\n              _context10.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('Recent', JSON.stringify(RecentItems)));\n\n            case 3:\n              _context10.next = 8;\n              break;\n\n            case 5:\n              _context10.prev = 5;\n              _context10.t0 = _context10[\"catch\"](0);\n              alert(_context10.t0);\n\n            case 8:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, null, null, [[0, 5]], Promise);\n    };\n\n    LoadRI();\n  }\n\n  var _useState33 = useState(null),\n      _useState34 = _slicedToArray(_useState33, 2),\n      EpLinkId = _useState34[0],\n      SetEpLinkId = _useState34[1];\n\n  var _useState35 = useState(null),\n      _useState36 = _slicedToArray(_useState35, 2),\n      EpLinkDefault = _useState36[0],\n      SetEpLinkDefault = _useState36[1];\n\n  var _useState37 = useState(null),\n      _useState38 = _slicedToArray(_useState37, 2),\n      EpLinkAlias = _useState38[0],\n      SetEpLinkAlias = _useState38[1];\n\n  var _useState39 = useState(null),\n      _useState40 = _slicedToArray(_useState39, 2),\n      minEp = _useState40[0],\n      setMinEp = _useState40[1];\n\n  var _useState41 = useState(null),\n      _useState42 = _slicedToArray(_useState41, 2),\n      maxEp = _useState42[0],\n      setMaxEp = _useState42[1];\n\n  var _useState43 = useState(false),\n      _useState44 = _slicedToArray(_useState43, 2),\n      AlreadyLoaded = _useState44[0],\n      SetAlreadyLoaded = _useState44[1];\n\n  var _useState45 = useState(null),\n      _useState46 = _slicedToArray(_useState45, 2),\n      EpisodesList = _useState46[0],\n      SetEpisodesList = _useState46[1];\n\n  function LoadEpisodes() {\n    var linkToFetch = \"https://ajax.apimovie.xyz/ajax/load-list-episode?ep_start=\" + minEp + \"&ep_end=\" + maxEp + \"&id=\" + EpLinkId + \"&default_ep=\" + EpLinkDefault + \"&alias=\" + EpLinkAlias;\n    console.log(linkToFetch);\n    fetch(linkToFetch).then(function (resp) {\n      return resp.text();\n    }).then(function (data) {\n      if (data.length > 0) {\n        var EpList = data.split(\"<ul id=\\\"episode_related\\\">\");\n        var EpList1 = EpList[1].split(\"</ul>\");\n        var EpList2 = EpList1[0].split(\"<li>\");\n        var Array = [{\n          \"Ep\": []\n        }];\n        var EpWatched = 0;\n\n        for (var i = EpList2.length - 1; i > 0; i--) {\n          var href = EpList2[i].split(\"<a href=\\\"\");\n          var href1 = href[1].split(\"\\\" class\");\n          var number = 0;\n\n          if (RecentData === null) {} else {\n            for (var f = 0; f < RecentData[0].Name.length; f++) {\n              if (RecentData[0].Name[f].Link === \"https://gogoanime.vc\" + href1[0].replace(/\\s+/g, '')) {\n                Array[0].Ep.push({\n                  \"id\": Math.abs(i - EpList2.length),\n                  \"Link\": \"https://gogoanime.vc\" + href1[0].replace(/\\s+/g, ''),\n                  \"backColor\": \"#07ab1d\"\n                });\n                number++;\n                EpWatched++;\n              } else {}\n            }\n          }\n\n          if (number < 1) {\n            Array[0].Ep.push({\n              \"id\": Math.abs(i - EpList2.length),\n              \"Link\": \"https://gogoanime.vc\" + href1[0].replace(/\\s+/g, ''),\n              \"backColor\": \"#c71512\"\n            });\n          }\n        }\n\n        SetAlreadyLoaded(true);\n        SetEpisodesList(Array[0].Ep);\n        SetEpisodesLoading(false);\n        setMinEp(EpWatched);\n        setMaxEp(Array[0].Ep.length);\n        setBackUpEpisodesList(Array[0].Ep);\n      } else {\n        var Array = [{\n          \"Ep\": []\n        }];\n        Array[0].Ep.push({\n          \"id\": \"0\",\n          \"Link\": \"https://gogoanime.vc\",\n          \"backColor\": \"#c71512\"\n        });\n        SetAlreadyLoaded(true);\n        SetEpisodesList(Array[0].Ep);\n        setBackUpEpisodesList(Array[0].Ep);\n        SetEpisodesLoading(false);\n        setMinEp(0);\n        setMaxEp(0);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }\n\n  useEffect(function () {\n    if (maxEp !== null && AlreadyLoaded === false) {\n      LoadEpisodes();\n    }\n  }, [maxEp]);\n\n  var RenderLoadEpisodes = function RenderLoadEpisodes(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(TouchableWithoutFeedback, {\n      onPress: function onPress() {\n        SetLink(item.Link);\n        RecentItems[0].Name.push({\n          \"Name\": Title,\n          \"Image\": Title_Image,\n          \"Link\": item.Link,\n          \"Episode\": \"Episode \" + item.id\n        }), addToRecent();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: {\n        backgroundColor: item.backColor,\n        width: 30,\n        height: 40,\n        borderRadius: 5,\n        marginBottom: 15,\n        justifyContent: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: \"white\",\n        alignSelf: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }\n    }, item.id)));\n  };\n\n  var _useState47 = useState(null),\n      _useState48 = _slicedToArray(_useState47, 2),\n      backUpEpisodesList = _useState48[0],\n      setBackUpEpisodesList = _useState48[1];\n\n  var _useState49 = useState(null),\n      _useState50 = _slicedToArray(_useState49, 2),\n      valueEp = _useState50[0],\n      setValueEp = _useState50[1];\n\n  function filterEp() {\n    var filterarray = backUpEpisodesList.filter(function (itemInList) {\n      if (itemInList.id.toString().includes(valueEp)) {\n        return itemInList;\n      } else {}\n    });\n    SetEpisodesList(filterarray);\n    SetEpisodesLoading(false);\n  }\n\n  useEffect(function () {\n    if (valueEp !== null && valueEp.replace(/ /g, '').length !== 0) {\n      SetEpisodesLoading(true);\n      var timeoutId = setTimeout(function () {\n        console.log(\"I can see you're not typing. I can use \\\"\" + valueEp.replace(/ /g, '') + \"\\\" now!\");\n        filterEp();\n      }, 500);\n      return function () {\n        return clearTimeout(timeoutId);\n      };\n    } else if (valueEp !== null) {\n      SetEpisodesList(backUpEpisodesList);\n      SetEpisodesLoading(false);\n    }\n  }, [valueEp]);\n\n  var LoadAnimePage = function LoadAnimePage() {\n    var value;\n    return _regeneratorRuntime.async(function LoadAnimePage$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.prev = 0;\n            _context11.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"Category\"));\n\n          case 3:\n            value = _context11.sent;\n            SetAnimePageLink(value);\n            _context11.next = 10;\n            break;\n\n          case 7:\n            _context11.prev = 7;\n            _context11.t0 = _context11[\"catch\"](0);\n            alert(_context11.t0);\n\n          case 10:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  function LoadWholePage() {\n    fetch(AnimePageLink).then(function (resp) {\n      return resp.text();\n    }).then(function (data) {\n      var Ep_Link_Id = data.split(\"class=\\\"movie_id\\\"\");\n      var Ep_Link_Id_2 = Ep_Link_Id[0].split(\"<div class=\\\"anime_info_episodes_next\\\">\");\n      var Ep_Link_Id_3 = Ep_Link_Id_2[1].split(\"value=\\\"\");\n      var Ep_Link_Id_4 = Ep_Link_Id_3[1].split(\"\\\"\");\n      SetEpLinkId(Ep_Link_Id_4[0]);\n      var Ep_Link_Alias = data.split(\"\\\" id=\\\"alias_anime\\\"\");\n      var Ep_Link_Alias_2 = Ep_Link_Alias[0].split(\"id=\\\"default_ep\\\"\");\n      var Ep_Link_Alias_3 = Ep_Link_Alias_2[1].split(\"<input type=\\\"hidden\\\" value=\\\"\");\n      SetEpLinkAlias(Ep_Link_Alias_3[1]);\n      var Ep_Link_Default = data.split(\"\\\" id=\\\"default_ep\\\"\");\n      var Ep_Link_Default_2 = Ep_Link_Default[0].split(\"id=\\\"movie_id\\\"\");\n      var Ep_Link_Default_3 = Ep_Link_Default_2[1].split(\"<input type=\\\"hidden\\\" value=\\\"\");\n      SetEpLinkDefault(Ep_Link_Default_3[1]);\n      var anime_box_body = data.split(\"<div class=\\\"anime_info_body\\\">\");\n      var anime_box_body2 = anime_box_body[1].split(\"<div class=\\\"anime_video_body\\\" style=\\\"padding: 0 20px 20px 20px;\\\" >\");\n      var Image = anime_box_body2[0].split(\"<img src=\\\"\");\n      var Image2 = Image[1].split(\"\\\">\");\n      SetImage(Image2[0]);\n      var Title = anime_box_body2[0].split(\"<h1>\");\n      var Title2 = Title[1].split(\"</h1>\");\n      SetTitle(Title2[0]);\n      var Description = anime_box_body2[0].split(\"<span>Plot Summary: </span>\");\n      var Description2 = Description[1].split(\"</p>\");\n      var Description3 = Description2[0].replace(/\\s+/g, ' ').trim();\n      SetDescription(Description3);\n      var Type = anime_box_body2[0].split(\"<span>Type: </span>\");\n      var Type2 = Type[1].split(\">\");\n      var Type3 = Type2[1].split(\"</a\");\n      SetType(Type3[0]);\n      var All_Genres = [];\n      var Genre = anime_box_body2[0].split(\"<span>Genre: </span>\");\n      var Genre2 = Genre[1].split(\"</p>\");\n      var Genre3 = Genre2[0].split(\"</a>\");\n\n      for (var _i = 0; _i < Genre3.length - 1; _i++) {\n        if (_i == 0) {\n          var Genre4 = Genre3[_i].split(\">\");\n\n          All_Genres.push(Genre4[1]);\n        } else {\n          var Genre4 = Genre3[_i].split(\">\");\n\n          var Genre5 = Genre4[1].slice(2);\n          All_Genres.push(Genre5);\n        }\n      }\n\n      var Final_Genres = All_Genres.toString().replace(/,(?=[^\\s])/g, \", \");\n      SetGenre(Final_Genres);\n      var Released = anime_box_body2[0].split(\"<span>Released: </span>\");\n      var Released2 = Released[1].split(\"</p>\");\n\n      if (Released2[0] === '0') {\n        SetReleased('Unknown');\n      } else {\n        SetReleased(Released2[0]);\n      }\n\n      var Status = anime_box_body2[0].split(\"<span>Status: </span>\");\n      var Status2 = Status[1].split(\">\");\n      var Status3 = Status2[1].split(\"</a\");\n      SetStatus(Status3[0]);\n      var OtherName = anime_box_body2[0].split(\"<span>Other name: </span>\");\n      var OtherName2 = OtherName[1].split(\"</p>\");\n\n      if (OtherName2[0] === \"\") {\n        SetOtherName(\"None\");\n      } else {\n        SetOtherName(OtherName2[0]);\n      }\n\n      var Episodes = data.split(\"<ul id=\\\"episode_page\\\">\");\n      var Episodes2 = Episodes[1].split(\"</ul>\");\n      var Episodes3 = Episodes2[0].split(\"<li>\");\n\n      for (var i = 0; i < Episodes3.length; i++) {\n        if (i === Episodes3.length - 1) {\n          var MaxEp = Episodes3[i].split(\">\");\n          var MaxEp2 = MaxEp[1].split(\"</a\");\n          var MaxEp3 = MaxEp2[0].split(\"-\");\n\n          if (parseFloat(MaxEp3[1]) >= 1) {\n            setMaxEp(MaxEp3[1]);\n          } else {\n            setMaxEp(0);\n          }\n        }\n      }\n\n      SetAnimeLoading(false);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }\n\n  useEffect(function () {\n    if (AnimePageLink === null) {\n      LoadAnimePage();\n    } else {\n      LoadWholePage();\n    }\n  }, [AnimePageLink]);\n\n  var _useState51 = useState(false),\n      _useState52 = _slicedToArray(_useState51, 2),\n      ReadingMore = _useState52[0],\n      SetReadingMore = _useState52[1];\n\n  var _useState53 = useState(null),\n      _useState54 = _slicedToArray(_useState53, 2),\n      darkModeIsEnabled = _useState54[0],\n      setIsEnabled = _useState54[1];\n\n  useEffect(function () {\n    console.log(darkModeIsEnabled);\n\n    if (darkModeIsEnabled === null) {\n      loadDarkMode();\n    }\n  }, [darkModeIsEnabled]);\n\n  var saveDarkMode = function saveDarkMode() {\n    return _regeneratorRuntime.async(function saveDarkMode$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            console.log(\"save\");\n            console.log(darkModeIsEnabled);\n            console.log(\"save\");\n\n            if (!(darkModeIsEnabled === true)) {\n              _context12.next = 14;\n              break;\n            }\n\n            _context12.prev = 4;\n            _context12.next = 7;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"DarkMode\", JSON.stringify(false)));\n\n          case 7:\n            _context12.next = 12;\n            break;\n\n          case 9:\n            _context12.prev = 9;\n            _context12.t0 = _context12[\"catch\"](4);\n            alert(_context12.t0);\n\n          case 12:\n            _context12.next = 22;\n            break;\n\n          case 14:\n            _context12.prev = 14;\n            _context12.next = 17;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"DarkMode\", JSON.stringify(true)));\n\n          case 17:\n            _context12.next = 22;\n            break;\n\n          case 19:\n            _context12.prev = 19;\n            _context12.t1 = _context12[\"catch\"](14);\n            alert(_context12.t1);\n\n          case 22:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, null, null, [[4, 9], [14, 19]], Promise);\n  };\n\n  var loadDarkMode = function loadDarkMode() {\n    var value;\n    return _regeneratorRuntime.async(function loadDarkMode$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _context13.prev = 0;\n            _context13.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"DarkMode\"));\n\n          case 3:\n            value = _context13.sent;\n            console.log(\"value\");\n            console.log(JSON.parse(value));\n\n            if (value !== null) {\n              setIsEnabled(JSON.parse(value));\n            } else {\n              setIsEnabled(false);\n            }\n\n            _context13.next = 12;\n            break;\n\n          case 9:\n            _context13.prev = 9;\n            _context13.t0 = _context13[\"catch\"](0);\n            alert(_context13.t0);\n\n          case 12:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  useEffect(function () {\n    LogBox.ignoreLogs(['VirtualizedLists should never be nested']);\n  }, []);\n  return React.createElement(SafeAreaView, {\n    style: darkModeIsEnabled ? [styles.lightMode] : [styles.container],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: [styles.top],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      navigation.goBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 17\n    }\n  }, React.createElement(FontAwesomeIcon, {\n    style: {\n      marginRight: 15\n    },\n    icon: faArrowLeft,\n    size: 20,\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 21\n    }\n  })), React.createElement(Text, {\n    numberOfLines: 1,\n    ellipsizeMode: 'tail',\n    style: [styles.Text, {\n      fontSize: 20.5,\n      flexGrow: 1,\n      flex: 1,\n      alignSelf: 'center'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 17\n    }\n  }, Title)), isAnimeLoading ? React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: darkModeIsEnabled ? \"black\" : \"white\",\n    style: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 31\n    }\n  }) : React.createElement(ScrollView, {\n    style: [styles.AnimeContainer, {}],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: [{\n      alignItems: 'center'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    style: {\n      alignSelf: \"center\"\n    },\n    source: {\n      uri: Title_Image\n    },\n    style: {\n      width: 183.6,\n      height: 270,\n      borderRadius: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: [{\n      marginLeft: 10,\n      marginRight: 10,\n      flexDirection: 'row',\n      justifyContent: 'center',\n      marginTop: 10\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return SetBookmarked(function (previousState) {\n        return !previousState;\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: {\n      padding: 10,\n      paddingRight: 15,\n      paddingLeft: 15,\n      backgroundColor: Bookmarked ? '#c71512' : '#000000',\n      borderRadius: 5,\n      marginRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 25\n    }\n  }, Bookmarked ? React.createElement(Text, {\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 51\n    }\n  }, \"Bookmarked\") : React.createElement(Text, {\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 105\n    }\n  }, \"Bookmark\"))), React.createElement(TouchableWithoutFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: {\n      padding: 10,\n      paddingRight: 15,\n      paddingLeft: 15,\n      backgroundColor: '#c71512',\n      borderRadius: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 37\n    }\n  }, minEp, \"/\", maxEp)))), React.createElement(View, {\n    style: {\n      margin: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    numberOfLines: ReadingMore ? 1000 : 5,\n    ellipsizeMode: 'tail',\n    style: {\n      color: darkModeIsEnabled ? 'black' : 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 29\n    }\n  }, \"Plot Summary: \", Description, \"\\n\", \"\\n\", \"Type: \", Type, \"\\n\", \"\\n\", \"Genre: \", Genre, \"\\n\", \"\\n\", \"Released: \", Released, \"\\n\", \"\\n\", \"Status: \", Status, \"\\n\", \"\\n\", \"Other name: \", OtherName), React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      SetReadingMore(function (previousState) {\n        return !previousState;\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 21\n    }\n  }, ReadingMore ? React.createElement(Text, {\n    style: {\n      color: '#0f88d9'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 25\n    }\n  }, \"Read Less\") : React.createElement(Text, {\n    style: {\n      color: '#0f88d9'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 25\n    }\n  }, \"Read More\")), React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontSize: 30,\n      alignSelf: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 29\n    }\n  }, \"Episodes:\"), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center',\n      borderRadius: 8,\n      backgroundColor: 'black',\n      alignSelf: 'center',\n      marginTop: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 29\n    }\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faSearch,\n    size: 14.5,\n    color: 'white',\n    marginLeft: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 33\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Search for a episode\",\n    placeholderTextColor: \"white\",\n    keyboardType: 'number-pad',\n    maxLength: 8,\n    style: {\n      paddingLeft: 5,\n      paddingRight: 8,\n      paddingTop: 5,\n      paddingBottom: 5,\n      alignSelf: 'center',\n      color: 'white'\n    },\n    onChangeText: function onChangeText(text) {\n      return setValueEp(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 29\n    }\n  })), isEpisodesLoading ? React.createElement(ActivityIndicator, {\n    size: \"small\",\n    color: darkModeIsEnabled ? \"black\" : \"white\",\n    style: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      marginTop: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 54\n    }\n  }) : React.createElement(FlatList, {\n    style: {\n      alignSelf: 'center',\n      marginTop: 15,\n      flex: 1,\n      width: \"100%\"\n    },\n    data: EpisodesList,\n    renderItem: RenderLoadEpisodes,\n    keyExtractor: function keyExtractor(_ref3, index) {\n      var id = _ref3.id;\n      return id.toString();\n    },\n    showsVerticalScrollIndicator: false,\n    numColumns: 5,\n    columnWrapperStyle: {\n      justifyContent: 'space-evenly'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 37\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#333131'\n  },\n  lightMode: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  top: {\n    backgroundColor: '#ed1915',\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight - 5 : 0,\n    width: '100%',\n    height: '10%',\n    paddingLeft: 10,\n    paddingRight: 10,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  Text: {\n    color: 'white',\n    fontSize: 24,\n    alignSelf: \"flex-start\"\n  },\n  bottom: {\n    backgroundColor: '#ed1915',\n    width: '100%',\n    height: '8%',\n    justifyContent: 'center',\n    bottom: 0\n  },\n  flaTContain: {\n    justifyContent: 'center'\n  },\n  searchIcon: {\n    alignSelf: 'center'\n  },\n  bottomIcons: {},\n  iconContainer: {\n    flexDirection: \"row\",\n    justifyContent: 'space-around',\n    flex: 0.65,\n    height: 35,\n    marginTop: 15\n  },\n  bottomIconContainer: {\n    flex: 0.5,\n    flexDirection: 'row',\n    justifyContent: 'space-around'\n  },\n  bottomTextContainer: {\n    flex: 0.5,\n    flexDirection: 'row',\n    justifyContent: 'space-around'\n  },\n  bottomText: {\n    color: 'white',\n    marginTop: 3,\n    fontSize: 17\n  },\n  AnimeContainer: {\n    flex: 1,\n    padding: 8,\n    zIndex: 0\n  }\n});","map":{"version":3,"sources":["C:/Users/KUMARMUK/Desktop/Anime App/Anime App/Views/Anime.js"],"names":["React","useEffect","useState","useRef","LogBox","DataProvider","FontAwesomeIcon","faHistory","faHome","faSearch","faBookmark","faEllipsisV","faMoon","faLanguage","faFastForward","faBars","faBackward","faArrowLeft","faTimesCircle","faDiscord","faGithub","AsyncStorage","Switch","TextInput","color","parse","Anime","navigation","AnimePageLink","SetAnimePageLink","Description","SetDescription","Title_Image","SetImage","Title","SetTitle","Type","SetType","Genre","SetGenre","Released","SetReleased","Status","SetStatus","OtherName","SetOtherName","Watched","Setwatched","Bookmarked","SetBookmarked","JustChecking","SetJustChecking","RemoveB","getItem","value","Parsed","JSON","console","log","i","Name","length","splice","Final_Save","setItem","stringify","alert","AddB","push","SavingArray","load","parsedVAlue","isAnimeLoading","SetAnimeLoading","isEpisodesLoading","SetEpisodesLoading","RecentData","SetRecentData","loadRecent","parsedValue","AnimeLink","SetLink","save","RecentItems","addToRecent","LoadRI","saveRI","Link","EpLinkId","SetEpLinkId","EpLinkDefault","SetEpLinkDefault","EpLinkAlias","SetEpLinkAlias","minEp","setMinEp","maxEp","setMaxEp","AlreadyLoaded","SetAlreadyLoaded","EpisodesList","SetEpisodesList","LoadEpisodes","linkToFetch","fetch","then","resp","text","data","EpList","split","EpList1","EpList2","Array","EpWatched","href","href1","number","f","replace","Ep","Math","abs","setBackUpEpisodesList","catch","error","RenderLoadEpisodes","item","id","backgroundColor","backColor","width","height","borderRadius","marginBottom","justifyContent","alignSelf","backUpEpisodesList","valueEp","setValueEp","filterEp","filterarray","filter","itemInList","toString","includes","timeoutId","setTimeout","clearTimeout","LoadAnimePage","LoadWholePage","Ep_Link_Id","Ep_Link_Id_2","Ep_Link_Id_3","Ep_Link_Id_4","Ep_Link_Alias","Ep_Link_Alias_2","Ep_Link_Alias_3","Ep_Link_Default","Ep_Link_Default_2","Ep_Link_Default_3","anime_box_body","anime_box_body2","Image","Image2","Title2","Description2","Description3","trim","Type2","Type3","All_Genres","Genre2","Genre3","Genre4","Genre5","slice","Final_Genres","Released2","Status2","Status3","OtherName2","Episodes","Episodes2","Episodes3","MaxEp","MaxEp2","MaxEp3","parseFloat","ReadingMore","SetReadingMore","darkModeIsEnabled","setIsEnabled","loadDarkMode","saveDarkMode","ignoreLogs","styles","lightMode","container","top","goBack","marginRight","Text","fontSize","flexGrow","flex","position","left","right","bottom","alignItems","AnimeContainer","uri","marginLeft","flexDirection","marginTop","previousState","padding","paddingRight","paddingLeft","margin","paddingTop","paddingBottom","index","StyleSheet","create","Platform","OS","StatusBar","currentHeight","flaTContain","searchIcon","bottomIcons","iconContainer","bottomIconContainer","bottomTextContainer","bottomText","zIndex"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport {\r\n    StyleSheet, LogBox  , Text, View, StatusBar, SafeAreaView, Dimensions, Button, DataProvider, Picker, DrawerLayoutAndroid, TouchableWithoutFeedback, Image, FlatList, Platform, ActivityIndicator, ScrollView, SectionList, KeyboardAvoidingView, TouchableHighlight, Alert\r\n} from 'react-native';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome'\r\nimport {\r\n    faHistory, faHome, faSearch, faBookmark, faEllipsisV, faMoon, faLanguage, faFastForward, faBars, faBackward, faArrowLeft, faTimesCircle\r\n} from '@fortawesome/free-solid-svg-icons/index';\r\nimport { faDiscord, faGithub } from '../node_modules/@fortawesome/free-brands-svg-icons';\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { Switch, TextInput } from 'react-native-gesture-handler';\r\nimport { color } from 'react-native-reanimated';\r\nimport { parse } from '@fortawesome/fontawesome-svg-core';\r\n\r\nexport default function Anime({ navigation }) {\r\n    const [AnimePageLink, SetAnimePageLink] = useState(null);\r\n    // Description\r\n    const [Description, SetDescription] = useState(null);\r\n    const [Title_Image, SetImage] = useState(null)\r\n    const [Title, SetTitle] = useState(null)\r\n    const [Type, SetType] = useState(null)\r\n    const [Genre, SetGenre] = useState(null)\r\n    const [Released, SetReleased] = useState(null)\r\n    const [Status, SetStatus] = useState(null)\r\n    const [OtherName, SetOtherName] = useState(null)\r\n    const [Watched, Setwatched] = useState(\"0/1000\")\r\n    // Bookmarked\r\n    const [Bookmarked, SetBookmarked] = useState(null)\r\n    const [JustChecking, SetJustChecking] = useState(null)\r\n    useEffect(() => {\r\n        const RemoveB = async () => {\r\n            try {\r\n                const value = await AsyncStorage.getItem('BookMarks');\r\n                var Parsed = JSON.parse(value);\r\n                console.log(JSON.parse(value));\r\n                for (var i = 0; i < Parsed[0].Name.length; i++) {\r\n                    if (Parsed[0].Name[i].Title === Title) {\r\n                        console.log(\"Exterminate >: \")\r\n                        Parsed[0].Name.splice(i, 1);\r\n                    }\r\n                }\r\n                const Final_Save = async () => {\r\n                    try {\r\n                        await AsyncStorage.setItem('BookMarks', JSON.stringify(Parsed));\r\n                        console.log('Exterminated')\r\n                    } catch (error) {\r\n                        alert(error);\r\n                    }\r\n                }\r\n                Final_Save();\r\n            } catch (error) {error}\r\n        }\r\n        const AddB = async () => {\r\n            try {\r\n                const value = await AsyncStorage.getItem('BookMarks');\r\n                const Parsed = JSON.parse(value)\r\n                if (Parsed !== null) {\r\n                    console.log('adding only sike')\r\n                    Parsed[0].Name.push({ \"Title\": Title, \"Released\": Released, \"Link\": AnimePageLink, \"Image\":Title_Image })\r\n                    const Final_Save = async () => {\r\n                        try {\r\n                            await AsyncStorage.setItem('BookMarks', JSON.stringify(Parsed));\r\n                            console.log('done with sike')\r\n                        } catch (error) {\r\n                            alert(error);\r\n                        }\r\n                    }\r\n                    Final_Save();\r\n                } else {\r\n                    console.log('adding only')\r\n                    var SavingArray = [{ \"Name\": [] }]\r\n                    SavingArray[0].Name.push({ \"Title\": Title, \"Released\": Released, \"Link\": AnimePageLink, \"Image\": Title_Image})\r\n                    console.log(SavingArray);\r\n                    const Final_Save = async () => {\r\n                        try {\r\n                            await AsyncStorage.setItem('BookMarks', JSON.stringify(SavingArray));\r\n                            console.log('done')\r\n                        } catch (error) {\r\n                            alert(error);\r\n                        }\r\n                    }\r\n                    Final_Save();\r\n                    \r\n                }\r\n            } catch (error) {error}\r\n        }\r\n        if (Bookmarked === true && JustChecking === false) {\r\n            AddB();\r\n        } else if (Bookmarked === false && JustChecking === false) {\r\n            RemoveB();\r\n        }\r\n    }, [Bookmarked])\r\n    useEffect(() => {\r\n        if (Bookmarked === null && Title !== null) {\r\n            const load = async () => {\r\n                try {\r\n                    const value = await AsyncStorage.getItem('BookMarks');\r\n                    if (JSON.parse(value) !== null) {\r\n                        console.log(\"some\")\r\n                        var parsedVAlue = JSON.parse(value);\r\n                        console.log(\"sso close\");\r\n                        console.log(parsedVAlue);\r\n                        console.log(parsedVAlue[0].Name.length);\r\n                        console.log('Title is' + Title);\r\n                        for (var i = 0; i < parsedVAlue[0].Name.length; i++) {\r\n                            if (parsedVAlue[0].Name[i].Title === Title) {\r\n                                SetBookmarked(true);\r\n                            }\r\n                        }\r\n                        SetJustChecking(false);\r\n                    } else {\r\n                        console.log(\"none\");\r\n                        SetBookmarked(false);\r\n                        SetJustChecking(false);\r\n                    }\r\n                }\r\n                catch (error) {\r\n                    alert(error)\r\n                }\r\n            }\r\n            load();\r\n        }\r\n    },[Title])\r\n    // Activity Indictor\r\n    const [isAnimeLoading, SetAnimeLoading] = useState(true)\r\n    const [isEpisodesLoading, SetEpisodesLoading] = useState(true);\r\n    //Loading Recent\r\n    const [RecentData , SetRecentData] = useState(null)\r\n    const loadRecent = async () => {\r\n        try {\r\n            const value = await AsyncStorage.getItem('Recent');\r\n            const parsedValue = JSON.parse(value)\r\n            SetRecentData(parsedValue)\r\n            // We have data!!\r\n        } catch (error) {\r\n            // Error retrieving data\r\n            alert(\"nooo\")\r\n        }\r\n    }\r\n    useEffect(function () {\r\n        if (RecentData === null) { loadRecent(); } else {\r\n        }\r\n    }, [RecentData])\r\n    // Watch Episode\r\n    const [AnimeLink, SetLink] = useState(null);\r\n    const save = async () => {\r\n        try {\r\n            await AsyncStorage.setItem(\"Anime\", AnimeLink);\r\n            navigation.push('Watch')\r\n        } catch (error) {\r\n            alert(error);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (AnimeLink !== null) {\r\n            console.log(\"UseEffect\" + AnimeLink);\r\n            save();\r\n        }\r\n        SetLink(null);\r\n    }, [AnimeLink]);\r\n    // Add to Recent\r\n    const RecentItems = [{ \"Name\": [] }]\r\n    function addToRecent() {\r\n        console.log(\"add To recent\");\r\n        var LoadRI = async () => {\r\n            try {\r\n                const value = await AsyncStorage.getItem('Recent');\r\n                if (value === null) {\r\n                    saveRI();\r\n                }\r\n                else {\r\n                    const Parsed = JSON.parse(value);\r\n                    console.log(\"Before\");\r\n                    for (var i = 0; i < Parsed[0].Name.length; i++) {\r\n                        if (RecentItems[0].Name[0].Link === Parsed[0].Name[i].Link) {\r\n                            console.log('same dont copy')\r\n                        }\r\n                        else {\r\n                            RecentItems[0].Name.push(Parsed[0].Name[i]);\r\n                        }\r\n                    }\r\n                    console.log(\"LoadRi\");\r\n                    saveRI();\r\n                }\r\n            } catch (error) {\r\n                alert(error);\r\n            }\r\n        }\r\n        var saveRI = async () => {\r\n            try {\r\n                await AsyncStorage.setItem('Recent', JSON.stringify(RecentItems));\r\n            } catch (error) {\r\n                alert(error);\r\n            }\r\n        }\r\n        LoadRI();\r\n    }\r\n    // Episodes\r\n    const [EpLinkId, SetEpLinkId] = useState(null)\r\n    const [EpLinkDefault, SetEpLinkDefault] = useState(null)\r\n    const [EpLinkAlias, SetEpLinkAlias] = useState(null)\r\n    const [minEp, setMinEp] = useState(null)\r\n    const [maxEp, setMaxEp] = useState(null)\r\n    const [AlreadyLoaded, SetAlreadyLoaded] = useState(false);\r\n    const [EpisodesList, SetEpisodesList]  = useState(null)\r\n    function LoadEpisodes() {\r\n        var linkToFetch = \"https://ajax.apimovie.xyz/ajax/load-list-episode?ep_start=\" + minEp + \"&ep_end=\" + maxEp + \"&id=\" + EpLinkId + \"&default_ep=\" + EpLinkDefault + \"&alias=\" + EpLinkAlias;        \r\n        console.log(linkToFetch);\r\n        fetch(linkToFetch)\r\n            .then(function (resp) {\r\n                return resp.text();\r\n            })\r\n            .then(function (data) {\r\n                if (data.length > 0) {\r\n                    var EpList = data.split(`<ul id=\"episode_related\">`)\r\n                    var EpList1 = EpList[1].split(`</ul>`)\r\n                    var EpList2 = EpList1[0].split(`<li>`)\r\n                    var Array = [{ \"Ep\": [] }]\r\n                    var EpWatched = 0;\r\n                    for (var i = EpList2.length - 1; i > 0; i--) {\r\n                        var href = EpList2[i].split(`<a href=\"`)\r\n                        var href1 = href[1].split(`\" class`)\r\n                        var number = 0;\r\n                        if (RecentData === null) { } else {\r\n                            for (var f = 0; f < RecentData[0].Name.length; f++) {\r\n                                if (RecentData[0].Name[f].Link === \"https://gogoanime.vc\" + href1[0].replace(/\\s+/g, '')) {\r\n                                    Array[0].Ep.push({ \"id\": Math.abs(i - EpList2.length), \"Link\": \"https://gogoanime.vc\" + href1[0].replace(/\\s+/g, ''), \"backColor\": \"#07ab1d\" })\r\n                                    number++;\r\n                                    EpWatched++;\r\n                                } else {\r\n                                }\r\n                            }\r\n                        }\r\n                        if (number < 1) {\r\n                            Array[0].Ep.push({ \"id\": Math.abs(i - EpList2.length), \"Link\": \"https://gogoanime.vc\" + href1[0].replace(/\\s+/g, ''), \"backColor\": \"#c71512\" })\r\n                        }\r\n\r\n                    }\r\n                    SetAlreadyLoaded(true);\r\n                    SetEpisodesList(Array[0].Ep)\r\n                    SetEpisodesLoading(false);\r\n                    setMinEp(EpWatched);\r\n                    setMaxEp(Array[0].Ep.length)\r\n                    setBackUpEpisodesList(Array[0].Ep)\r\n                } else {\r\n                    var Array = [{ \"Ep\": [] }]\r\n                    Array[0].Ep.push({ \"id\":  \"0\", \"Link\": \"https://gogoanime.vc\", \"backColor\": \"#c71512\" })\r\n                    SetAlreadyLoaded(true);\r\n                    SetEpisodesList(Array[0].Ep)\r\n                    setBackUpEpisodesList(Array[0].Ep)\r\n                    SetEpisodesLoading(false);\r\n                    setMinEp(0);\r\n                    setMaxEp(0)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n            });\r\n    }\r\n    useEffect(function () {\r\n        if (maxEp !== null && AlreadyLoaded === false) {\r\n            LoadEpisodes();\r\n        }\r\n    }, [maxEp])\r\n    const RenderLoadEpisodes = ({ item }) => (\r\n        <TouchableWithoutFeedback onPress={() => {\r\n            SetLink(item.Link)\r\n            RecentItems[0].Name.push({ \"Name\": Title, \"Image\": Title_Image, \"Link\": item.Link, \"Episode\":\"Episode \"+ item.id }),\r\n                addToRecent();\r\n        }}>\r\n            <View style={{ backgroundColor: item.backColor, width: 30, height: 40, borderRadius: 5, marginBottom: 15, justifyContent: 'center' }}>\r\n                <Text style={{ color: \"white\", alignSelf:'center' }}>{item.id}</Text>\r\n            </View>\r\n        </TouchableWithoutFeedback>\r\n    );\r\n    // Filter Episodes\r\n    const [backUpEpisodesList, setBackUpEpisodesList] = useState(null)\r\n    const [valueEp, setValueEp] = useState(null);\r\n    function filterEp() {\r\n        var filterarray = backUpEpisodesList.filter((itemInList) => { if (itemInList.id.toString().includes(valueEp)) { return itemInList } else {} })\r\n        SetEpisodesList(filterarray);\r\n        SetEpisodesLoading(false);\r\n    }\r\n    useEffect(function () {\r\n        if (valueEp !== null && valueEp.replace(/ /g, '').length !== 0) {\r\n            SetEpisodesLoading(true);\r\n            const timeoutId = setTimeout(() => {\r\n                console.log(`I can see you're not typing. I can use \"${valueEp.replace(/ /g, '')}\" now!`)\r\n                filterEp();\r\n            }, 500);\r\n            return () => clearTimeout(timeoutId);\r\n        } else if(valueEp !== null) {\r\n            SetEpisodesList(backUpEpisodesList);\r\n            SetEpisodesLoading(false);\r\n        }\r\n    }, [valueEp])\r\n    // Loading \r\n    const LoadAnimePage = async () => {\r\n        try {\r\n            const value = await AsyncStorage.getItem(\"Category\");\r\n            SetAnimePageLink(value)\r\n        } catch (error) {\r\n            alert(error)\r\n        }\r\n    }\r\n    function LoadWholePage() {\r\n        fetch(AnimePageLink)\r\n            .then(function (resp) {\r\n                return resp.text();\r\n            })\r\n            .then(function (data) {\r\n                // Ep Link Id\r\n                var Ep_Link_Id = data.split(`class=\"movie_id\"`);\r\n                var Ep_Link_Id_2 = Ep_Link_Id[0].split(`<div class=\"anime_info_episodes_next\">`);\r\n                var Ep_Link_Id_3 = Ep_Link_Id_2[1].split(`value=\"`)\r\n                var Ep_Link_Id_4 = Ep_Link_Id_3[1].split(`\"`)\r\n                SetEpLinkId(Ep_Link_Id_4[0])\r\n                // Ep Link Alias\r\n                var Ep_Link_Alias = data.split(`\" id=\"alias_anime\"`);\r\n                var Ep_Link_Alias_2 = Ep_Link_Alias[0].split(`id=\"default_ep\"`);\r\n                var Ep_Link_Alias_3 = Ep_Link_Alias_2[1].split(`<input type=\"hidden\" value=\"`)\r\n                SetEpLinkAlias(Ep_Link_Alias_3[1])\r\n                // Ep default\r\n                var Ep_Link_Default = data.split(`\" id=\"default_ep\"`)\r\n                var Ep_Link_Default_2 = Ep_Link_Default[0].split(`id=\"movie_id\"`);\r\n                var Ep_Link_Default_3 = Ep_Link_Default_2[1].split(`<input type=\"hidden\" value=\"`);\r\n                SetEpLinkDefault(Ep_Link_Default_3[1])\r\n                // Info Body\r\n                var anime_box_body = data.split(`<div class=\"anime_info_body\">`);\r\n                var anime_box_body2 = anime_box_body[1].split(`<div class=\"anime_video_body\" style=\"padding: 0 20px 20px 20px;\" >`)\r\n                // Image \r\n                var Image = anime_box_body2[0].split(`<img src=\"`);\r\n                var Image2 = Image[1].split(`\">`)\r\n                SetImage(Image2[0])\r\n                // Title\r\n                var Title = anime_box_body2[0].split(`<h1>`);\r\n                var Title2 = Title[1].split(`</h1>`)\r\n                SetTitle(Title2[0])\r\n                // Description\r\n                var Description = anime_box_body2[0].split(`<span>Plot Summary: </span>`);\r\n                var Description2 = Description[1].split(`</p>`);\r\n                var Description3 = Description2[0].replace(/\\s+/g, ' ').trim();\r\n                SetDescription(Description3)\r\n                // Type\r\n                var Type = anime_box_body2[0].split(`<span>Type: </span>`);\r\n                var Type2 = Type[1].split(`>`);\r\n                var Type3 = Type2[1].split(`</a`);\r\n                SetType(Type3[0])\r\n                // Genre\r\n                var All_Genres = []\r\n                var Genre = anime_box_body2[0].split(`<span>Genre: </span>`);\r\n                var Genre2 = Genre[1].split(`</p>`)\r\n                var Genre3 = Genre2[0].split(`</a>`)\r\n                for (let i = 0; i < Genre3.length - 1; i++) {\r\n                    if (i == 0) {\r\n                        var Genre4 = Genre3[i].split(`>`);\r\n                        All_Genres.push(Genre4[1])\r\n                    } else {\r\n                        var Genre4 = Genre3[i].split(`>`);\r\n                        var Genre5 = Genre4[1].slice(2)\r\n                        All_Genres.push(Genre5)\r\n                    }\r\n                }\r\n                var Final_Genres = All_Genres.toString().replace(/,(?=[^\\s])/g, \", \");\r\n                SetGenre(Final_Genres)\r\n                // Released\r\n                var Released = anime_box_body2[0].split(`<span>Released: </span>`);\r\n                var Released2 = Released[1].split(`</p>`)\r\n                if (Released2[0] === '0') {\r\n                    SetReleased('Unknown')\r\n                } else {\r\n                    SetReleased(Released2[0])\r\n                }\r\n                // Status\r\n                var Status = anime_box_body2[0].split(`<span>Status: </span>`);\r\n                var Status2 = Status[1].split(`>`)\r\n                var Status3 = Status2[1].split(`</a`)\r\n                SetStatus(Status3[0])\r\n                // Other Name\r\n                var OtherName = anime_box_body2[0].split(`<span>Other name: </span>`);\r\n                var OtherName2 = OtherName[1].split(`</p>`) \r\n                if (OtherName2[0] === \"\") {\r\n                    SetOtherName(\"None\");\r\n                } else {\r\n                    SetOtherName(OtherName2[0]);\r\n                }\r\n                // Episodes\r\n                var Episodes = data.split(`<ul id=\"episode_page\">`);\r\n                var Episodes2 = Episodes[1].split(`</ul>`);\r\n                var Episodes3 = Episodes2[0].split(`<li>`);\r\n                for (var i = 0; i < Episodes3.length; i++) {\r\n                    if (i === Episodes3.length - 1) {\r\n                        var MaxEp = Episodes3[i].split(`>`)\r\n                        var MaxEp2 = MaxEp[1].split(`</a`)\r\n                        var MaxEp3 = MaxEp2[0].split(`-`)\r\n                        if (parseFloat(MaxEp3[1]) >= 1) {\r\n                            setMaxEp(MaxEp3[1])\r\n                        } else {\r\n                            setMaxEp(0)\r\n                            // alert(\"No Episodes for this yet bro\")\r\n                        }\r\n                    }\r\n                }\r\n                SetAnimeLoading(false)\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n            });\r\n    }\r\n    useEffect(function () {\r\n        if (AnimePageLink === null) {\r\n            LoadAnimePage();\r\n        }\r\n        else {\r\n            LoadWholePage();\r\n        }\r\n    }, [AnimePageLink])\r\n    // Read More\r\n    const [ReadingMore, SetReadingMore] = useState(false)\r\n    //Dark Mode\r\n    const [darkModeIsEnabled, setIsEnabled] = useState(null);\r\n    useEffect(() => {\r\n        console.log(darkModeIsEnabled)\r\n        if (darkModeIsEnabled === null) {\r\n            loadDarkMode();\r\n        }\r\n    }, [darkModeIsEnabled])\r\n    const saveDarkMode = async () => {\r\n        console.log(\"save\")\r\n        console.log(darkModeIsEnabled)\r\n        console.log(\"save\")\r\n        if (darkModeIsEnabled === true) {\r\n            try {\r\n                await AsyncStorage.setItem(\"DarkMode\", JSON.stringify(false));\r\n            }\r\n            catch (error) {\r\n                alert(error)\r\n            }\r\n        }\r\n        else {\r\n            try {\r\n                await AsyncStorage.setItem(\"DarkMode\", JSON.stringify(true));\r\n            }\r\n            catch (error) {\r\n                alert(error)\r\n            }\r\n        }\r\n    }\r\n    const loadDarkMode = async () => {\r\n        try {\r\n            const value = await AsyncStorage.getItem(\"DarkMode\")\r\n            console.log(\"value\")\r\n            console.log(JSON.parse(value))\r\n            if (value !== null) {\r\n                setIsEnabled(JSON.parse(value))\r\n            }\r\n            else {\r\n                setIsEnabled(false);\r\n            }\r\n        } catch (error) {\r\n            alert(error)\r\n        }\r\n    }\r\n    //\r\n    // Log Box Ignore\r\n    useEffect(() => {\r\n        LogBox.ignoreLogs(['VirtualizedLists should never be nested']);\r\n    }, [])\r\n    return (\r\n        <SafeAreaView style={darkModeIsEnabled ? [styles.lightMode] : [styles.container]}>\r\n            <View style={[styles.top]}>\r\n                <TouchableWithoutFeedback onPress={() => { navigation.goBack()}}>\r\n                    <FontAwesomeIcon style={{marginRight:15}} icon={faArrowLeft} size={20} color={\"white\"} />\r\n                </TouchableWithoutFeedback>\r\n                <Text numberOfLines={1} ellipsizeMode={'tail'} style={[styles.Text, {fontSize:20.5, flexGrow:1, flex:1, alignSelf:'center'}]}>{Title}</Text>\r\n            </View>\r\n            {isAnimeLoading ? <ActivityIndicator size=\"large\" color={darkModeIsEnabled ? \"black\" : \"white\"} style={{\r\n                position: 'absolute',\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0,\r\n                alignItems: 'center',\r\n                justifyContent: 'center'\r\n            }} /> : (\r\n            <ScrollView style={[styles.AnimeContainer, {}]}>\r\n                <View style={[{ alignItems:'center' }]}>\r\n                    <Image style={{ alignSelf: \"center\" }} source={{uri: Title_Image}} style={{ width: 183.6, height: 270, borderRadius:10 }} />\r\n                </View>\r\n                <View style={[{marginLeft:10,marginRight:10,flexDirection:'row',justifyContent:'center',marginTop:10}]}>\r\n                    <TouchableWithoutFeedback onPress={()=> SetBookmarked(previousState => !previousState)}>\r\n                        <View style={{ padding: 10, paddingRight:15,paddingLeft:15, backgroundColor: Bookmarked ? '#c71512' :'#000000',borderRadius:5, marginRight:10}}>\r\n                                    {Bookmarked ? <Text style={{ color: 'white' }}>Bookmarked</Text> : (<Text style={{ color: 'white' }}>Bookmark</Text> )}\r\n                        </View>\r\n                    </TouchableWithoutFeedback>\r\n                    <TouchableWithoutFeedback>\r\n                        <View style={{ padding: 10, paddingRight:15,paddingLeft:15, backgroundColor:'#c71512',borderRadius:5}}>\r\n                                    <Text style={{ color: 'white' }}>{minEp}/{maxEp}</Text>\r\n                        </View>\r\n                    </TouchableWithoutFeedback>\r\n                </View>\r\n                <View style={{ margin:10}}>\r\n                            <Text numberOfLines={ReadingMore ? 1000 : 5} ellipsizeMode={'tail'} style={{ color: darkModeIsEnabled ? 'black':'white' }}>\r\n                        Plot Summary: {Description}\r\n                        {\"\\n\"}\r\n                        {\"\\n\"}\r\n                        Type: {Type}\r\n                        {\"\\n\"}\r\n                        {\"\\n\"}\r\n                        Genre: {Genre}\r\n                        {\"\\n\"}\r\n                        {\"\\n\"}\r\n                        Released: {Released}\r\n                        {\"\\n\"}\r\n                        {\"\\n\"}\r\n                        Status: {Status}\r\n                        {\"\\n\"}\r\n                        {\"\\n\"}\r\n                        Other name: {OtherName}\r\n                    </Text>\r\n                    <TouchableWithoutFeedback onPress={() =>{SetReadingMore(previousState => !previousState)}}>\r\n                        { ReadingMore ?\r\n                        <Text style={{ color: '#0f88d9' }}>Read Less</Text>\r\n                            :\r\n                        <Text style={{ color: '#0f88d9' }}>Read More</Text>\r\n                        }\r\n                            </TouchableWithoutFeedback>\r\n                            <Text style={{ color: 'white', fontSize: 30, alignSelf: 'center' }}>Episodes:</Text>\r\n                            <View style={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center', borderRadius: 8, backgroundColor: 'black', alignSelf:'center', marginTop:3}}>\r\n                                <FontAwesomeIcon icon={faSearch} size={14.5} color={'white'} marginLeft={5}/>\r\n                            <TextInput placeholder={\"Search for a episode\"}\r\n                                    placeholderTextColor={\"white\"}\r\n                                    keyboardType={'number-pad'}\r\n                                    maxLength={8}\r\n                                    style={{paddingLeft:5,paddingRight:8,paddingTop:5,paddingBottom:5 ,alignSelf: 'center', color: 'white' }} \r\n                                    onChangeText={text => setValueEp(text)}\r\n                                    />\r\n                            </View>\r\n                                {isEpisodesLoading ? <ActivityIndicator size=\"small\" color={darkModeIsEnabled ? \"black\" : \"white\"} style={{\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                marginTop:5\r\n                            }} /> : (\r\n                                    <FlatList style={{ alignSelf: 'center', marginTop: 15, flex: 1, width: \"100%\" }}\r\n                                        data={EpisodesList}\r\n                                        renderItem={RenderLoadEpisodes}\r\n                                        keyExtractor={({ id }, index) => id.toString()}\r\n                                        showsVerticalScrollIndicator={false}\r\n                                        numColumns={5}\r\n                                        columnWrapperStyle={{ justifyContent: 'space-evenly' }}\r\n                                    />\r\n                                )}\r\n                 </View>\r\n                    </ScrollView>\r\n                )}\r\n                \r\n        </SafeAreaView>\r\n        )\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#333131',\r\n    },\r\n    lightMode: {\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n    }\r\n    ,\r\n    top: {\r\n        backgroundColor: '#ed1915',\r\n        paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight - 5 : 0,\r\n        width: '100%',\r\n        height: '10%',\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n    },\r\n    Text: {\r\n        color: 'white',\r\n        fontSize: 24,\r\n        alignSelf: \"flex-start\",\r\n    },\r\n    bottom: {\r\n        backgroundColor: '#ed1915',\r\n        width: '100%',\r\n        height: '8%',\r\n        justifyContent: 'center',\r\n        bottom: 0,\r\n    },\r\n    flaTContain: {\r\n        justifyContent: 'center'\r\n    },\r\n    searchIcon: {\r\n        alignSelf: 'center'\r\n    },\r\n    bottomIcons: {\r\n    },\r\n    iconContainer: {\r\n        flexDirection: \"row\",\r\n        justifyContent: 'space-around',\r\n        flex: 0.65,\r\n        height: 35,\r\n        marginTop: 15\r\n    },\r\n    bottomIconContainer: {\r\n        flex: 0.5,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around'\r\n    },\r\n    bottomTextContainer: {\r\n        flex: 0.5,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around'\r\n    },\r\n    bottomText: {\r\n        color: 'white',\r\n        marginTop: 3,\r\n        fontSize: 17,\r\n    },\r\n    AnimeContainer: {\r\n        flex: 1,\r\n        padding: 8,\r\n        zIndex: 0\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}