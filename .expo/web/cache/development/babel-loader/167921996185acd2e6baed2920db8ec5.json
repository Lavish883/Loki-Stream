{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\KUMARMUK\\\\Desktop\\\\Anime App\\\\Anime App\\\\Views\\\\BookMarks.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { LogBox } from \"react-native-web/dist/index\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { DataProvider } from \"react-native-web/dist/index\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport DrawerLayoutAndroid from \"react-native-web/dist/exports/DrawerLayoutAndroid\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport { faHistory, faHome, faSearch, faBookmark, faEllipsisV, faMoon, faLanguage, faFastForward, faBars, faBackward, faArrowLeft, faTimesCircle } from '@fortawesome/free-solid-svg-icons/index';\nimport { faDiscord, faGithub } from \"../node_modules/@fortawesome/free-brands-svg-icons\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { Switch, TextInput } from 'react-native-gesture-handler';\nimport { styles } from \"../Views/styles\";\nexport default function BookMarks(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      darkModeIsEnabled = _useState2[0],\n      setIsEnabled = _useState2[1];\n\n  useEffect(function () {\n    console.log(darkModeIsEnabled);\n\n    if (darkModeIsEnabled === null) {\n      loadDarkMode();\n    }\n  }, [darkModeIsEnabled]);\n\n  var saveDarkMode = function saveDarkMode() {\n    return _regeneratorRuntime.async(function saveDarkMode$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"save\");\n            console.log(darkModeIsEnabled);\n            console.log(\"save\");\n\n            if (!(darkModeIsEnabled === true)) {\n              _context.next = 14;\n              break;\n            }\n\n            _context.prev = 4;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"DarkMode\", JSON.stringify(false)));\n\n          case 7:\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](4);\n            alert(_context.t0);\n\n          case 12:\n            _context.next = 22;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.next = 17;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"DarkMode\", JSON.stringify(true)));\n\n          case 17:\n            _context.next = 22;\n            break;\n\n          case 19:\n            _context.prev = 19;\n            _context.t1 = _context[\"catch\"](14);\n            alert(_context.t1);\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[4, 9], [14, 19]], Promise);\n  };\n\n  var loadDarkMode = function loadDarkMode() {\n    var value;\n    return _regeneratorRuntime.async(function loadDarkMode$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"DarkMode\"));\n\n          case 3:\n            value = _context2.sent;\n            console.log(\"value\");\n            console.log(JSON.parse(value));\n\n            if (value !== null) {\n              setIsEnabled(JSON.parse(value));\n            } else {\n              setIsEnabled(false);\n            }\n\n            _context2.next = 12;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            alert(_context2.t0);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      BookMarkData = _useState4[0],\n      SetBookMarkData = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isBookMarkLoading = _useState6[0],\n      setIsBookMarkLoading = _useState6[1];\n\n  useEffect(function () {\n    var loadData = function loadData() {\n      var value, parsedValue;\n      return _regeneratorRuntime.async(function loadData$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('BookMarks'));\n\n            case 3:\n              value = _context3.sent;\n              parsedValue = JSON.parse(value);\n\n              if (parsedValue !== null) {\n                console.log(parsedValue);\n                SetBookMarkData(parsedValue[0].Name);\n                setIsBookMarkLoading(false);\n              } else {\n                console.log(parsedValue);\n                setIsBookMarkLoading(false);\n              }\n\n              _context3.next = 11;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n              alert(_context3.t0);\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    };\n\n    if (BookMarkData === null) {\n      loadData();\n    }\n  }, [BookMarkData]);\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      clickedBookMark = _useState8[0],\n      SetClickedBookMark = _useState8[1];\n\n  var saveAndNavigate = function saveAndNavigate() {\n    return _regeneratorRuntime.async(function saveAndNavigate$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('Category', clickedBookMark));\n\n          case 3:\n            navigation.navigate('Anime');\n            _context4.next = 8;\n            break;\n\n          case 6:\n            _context4.prev = 6;\n            _context4.t0 = _context4[\"catch\"](0);\n\n          case 8:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  useEffect(function () {\n    if (clickedBookMark !== null) {\n      saveAndNavigate();\n    }\n\n    SetClickedBookMark(null);\n  }, [clickedBookMark]);\n\n  var ShowAnime = function ShowAnime(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(TouchableWithoutFeedback, {\n      onPress: function onPress() {\n        SetClickedBookMark(item.Link);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: {\n        borderRadius: 10,\n        overflow: \"hidden\",\n        backgroundColor: \"#2b2b2b\",\n        marginRight: 15,\n        marginBottom: 15,\n        maxWidth: 140\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, React.createElement(Image, {\n      style: {\n        width: 140,\n        height: 205\n      },\n      source: {\n        \"uri\": item.Image\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }), React.createElement(Text, {\n      style: {\n        marginTop: 5,\n        color: \"white\",\n        textAlign: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, item.Title), React.createElement(Text, {\n      style: {\n        color: \"white\",\n        textAlign: 'center',\n        marginBottom: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, \"Released: \", item.Released)));\n  };\n\n  var showNothing = function showNothing() {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        padding: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, React.createElement(Image, {\n      style: {\n        alignSelf: \"center\"\n      },\n      source: require(\"./Images/Add_BookMark.png\"),\n      style: {\n        width: 250,\n        height: 300\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }), React.createElement(Text, {\n      style: {\n        textAlign: \"center\",\n        textAlignVertical: 'center',\n        fontSize: 25,\n        color: darkModeIsEnabled ? 'black' : 'white'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, \"Add Some Bookmarks\"));\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: darkModeIsEnabled ? [styles.lightMode] : [styles.container],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: [styles.top],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      navigation.goBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, React.createElement(FontAwesomeIcon, {\n    style: {\n      marginRight: 15\n    },\n    icon: faArrowLeft,\n    size: 20,\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  })), React.createElement(Text, {\n    numberOfLines: 1,\n    ellipsizeMode: 'tail',\n    style: [styles.Text, {\n      flexGrow: 1,\n      flex: 1,\n      alignSelf: 'center'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, \"Bookmarks\")), React.createElement(View, {\n    style: [styles.AnimeContainer],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, isBookMarkLoading ? React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: darkModeIsEnabled ? \"black\" : \"white\",\n    style: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 34\n    }\n  }) : React.createElement(FlatList, {\n    numColumns: \"2\",\n    style: [{\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      marginLeft: 6\n    }],\n    data: BookMarkData,\n    showsVerticalScrollIndicator: false,\n    keyExtractor: function keyExtractor(item) {\n      return item.Link;\n    },\n    renderItem: ShowAnime,\n    ListEmptyComponent: showNothing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/KUMARMUK/Desktop/Anime App/Anime App/Views/BookMarks.js"],"names":["React","useEffect","useState","useRef","LogBox","DataProvider","FontAwesomeIcon","faHistory","faHome","faSearch","faBookmark","faEllipsisV","faMoon","faLanguage","faFastForward","faBars","faBackward","faArrowLeft","faTimesCircle","faDiscord","faGithub","AsyncStorage","Switch","TextInput","styles","BookMarks","navigation","darkModeIsEnabled","setIsEnabled","console","log","loadDarkMode","saveDarkMode","setItem","JSON","stringify","alert","getItem","value","parse","BookMarkData","SetBookMarkData","isBookMarkLoading","setIsBookMarkLoading","loadData","parsedValue","Name","clickedBookMark","SetClickedBookMark","saveAndNavigate","navigate","ShowAnime","item","Link","borderRadius","overflow","backgroundColor","marginRight","marginBottom","maxWidth","width","height","Image","marginTop","color","textAlign","Title","Released","showNothing","flex","alignItems","padding","alignSelf","require","textAlignVertical","fontSize","lightMode","container","top","goBack","Text","flexGrow","AnimeContainer","position","left","right","bottom","justifyContent","flexDirection","flexWrap","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport {\r\n    StyleSheet, LogBox, Text, View, StatusBar, SafeAreaView, Dimensions, Button, DataProvider, Picker, DrawerLayoutAndroid, TouchableWithoutFeedback, Image, FlatList, Platform, ActivityIndicator, ScrollView, SectionList, KeyboardAvoidingView, TouchableHighlight, Alert\r\n} from 'react-native';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome'\r\nimport {\r\n    faHistory, faHome, faSearch, faBookmark, faEllipsisV, faMoon, faLanguage, faFastForward, faBars, faBackward, faArrowLeft, faTimesCircle\r\n} from '@fortawesome/free-solid-svg-icons/index';\r\nimport { faDiscord, faGithub } from '../node_modules/@fortawesome/free-brands-svg-icons';\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { Switch, TextInput } from 'react-native-gesture-handler';\r\nimport {styles} from '../Views/styles' \r\n\r\nexport default function BookMarks({ navigation }) {\r\n    // Dark Mode\r\n    const [darkModeIsEnabled, setIsEnabled] = useState(null);\r\n    useEffect(() => {\r\n        console.log(darkModeIsEnabled)\r\n        if (darkModeIsEnabled === null) {\r\n            loadDarkMode();\r\n        }\r\n    }, [darkModeIsEnabled])\r\n    const saveDarkMode = async () => {\r\n        console.log(\"save\")\r\n        console.log(darkModeIsEnabled)\r\n        console.log(\"save\")\r\n        if (darkModeIsEnabled === true) {\r\n            try {\r\n                await AsyncStorage.setItem(\"DarkMode\", JSON.stringify(false));\r\n            }\r\n            catch (error) {\r\n                alert(error)\r\n            }\r\n        }\r\n        else {\r\n            try {\r\n                await AsyncStorage.setItem(\"DarkMode\", JSON.stringify(true));\r\n            }\r\n            catch (error) {\r\n                alert(error)\r\n            }\r\n        }\r\n    }\r\n    const loadDarkMode = async () => {\r\n        try {\r\n            const value = await AsyncStorage.getItem(\"DarkMode\")\r\n            console.log(\"value\")\r\n            console.log(JSON.parse(value))\r\n            if (value !== null) {\r\n                setIsEnabled(JSON.parse(value))\r\n            }\r\n            else {\r\n                setIsEnabled(false);\r\n            }\r\n        } catch (error) {\r\n            alert(error)\r\n        }\r\n    }\r\n    // BookMarks \r\n    const [BookMarkData, SetBookMarkData] = useState(null);\r\n    const [isBookMarkLoading, setIsBookMarkLoading] = useState(true);\r\n    useEffect(() => {\r\n        const loadData = async() =>{\r\n            try {\r\n                var value = await AsyncStorage.getItem('BookMarks');\r\n                var parsedValue = JSON.parse(value);\r\n                if (parsedValue !== null) {\r\n                    console.log(parsedValue);\r\n                    SetBookMarkData(parsedValue[0].Name)\r\n                    setIsBookMarkLoading(false);\r\n                } else {\r\n                    console.log(parsedValue);\r\n                    setIsBookMarkLoading(false);\r\n                }\r\n\r\n            } catch (error) {\r\n                alert(error);\r\n            }\r\n        }\r\n        if (BookMarkData === null) {\r\n            loadData();\r\n        }\r\n    }, [BookMarkData])\r\n    // Setting BookMarks\r\n    const [clickedBookMark, SetClickedBookMark] = useState(null);\r\n    const saveAndNavigate = async () => {\r\n        try {\r\n            await AsyncStorage.setItem('Category', clickedBookMark);\r\n            navigation.navigate('Anime');\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (clickedBookMark !== null) {\r\n            saveAndNavigate();\r\n        }\r\n        SetClickedBookMark(null);\r\n    },[clickedBookMark])\r\n    // Render Anime\r\n    const ShowAnime = ({ item }) => (\r\n        <TouchableWithoutFeedback onPress={() => {SetClickedBookMark(item.Link)}}>\r\n            <View style={{ borderRadius: 10, overflow: \"hidden\", backgroundColor: \"#2b2b2b\", marginRight: 15, marginBottom: 15, maxWidth: 140 }}>\r\n                <Image style={{ width: 140, height: 205, }} source={{ \"uri\": item.Image }} />\r\n                <Text style={{ marginTop: 5, color: \"white\", textAlign: 'center' }}>{item.Title}</Text>\r\n                <Text style={{ color: \"white\", textAlign: 'center', marginBottom: 5 }}>Released: {item.Released}</Text>\r\n            </View>\r\n        </TouchableWithoutFeedback>\r\n    )\r\n    const showNothing = () => {\r\n        return (\r\n            <View style={{ flex: 1, alignItems: 'center', padding: 10 }}>\r\n                <Image style={{ alignSelf: \"center\" }} source={require(\"./Images/Add_BookMark.png\")} style={{ width: 250, height: 300, }} />\r\n                <Text style={{ textAlign: \"center\", textAlignVertical: 'center', fontSize: 25, color: darkModeIsEnabled ? 'black' : 'white' }}>Add Some Bookmarks</Text>\r\n            </View>\r\n        )\r\n    }\r\n    return (\r\n        <SafeAreaView style={darkModeIsEnabled ? [styles.lightMode] : [styles.container]}>\r\n            <View style={[styles.top]}>\r\n                <TouchableWithoutFeedback onPress={() => { navigation.goBack() }}>\r\n                    <FontAwesomeIcon style={{ marginRight: 15 }} icon={faArrowLeft} size={20} color={\"white\"} />\r\n                </TouchableWithoutFeedback>\r\n                <Text numberOfLines={1} ellipsizeMode={'tail'} style={[styles.Text, {flexGrow: 1, flex: 1, alignSelf: 'center' }]}>Bookmarks</Text>\r\n            </View>\r\n            <View style={[styles.AnimeContainer]}>\r\n            {isBookMarkLoading ? <ActivityIndicator size=\"large\" color={darkModeIsEnabled ? \"black\" : \"white\"} style={{\r\n                position: 'absolute',\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0,\r\n                alignItems: 'center',\r\n                justifyContent: 'center'\r\n            }} /> : ( \r\n                        <FlatList numColumns=\"2\" style={[{ flexDirection: 'row', flexWrap: 'wrap', marginLeft: 6 }]}\r\n                            data={BookMarkData}\r\n                            showsVerticalScrollIndicator={false}\r\n                            keyExtractor={item => item.Link}\r\n                            renderItem={ShowAnime}\r\n                            ListEmptyComponent={showNothing}\r\n                        />\r\n                    )}\r\n            </View>\r\n        </SafeAreaView>\r\n        )\r\n}"]},"metadata":{},"sourceType":"module"}